javascript:(function(){if(window.__noGravityActive){  window.__noGravityActive=0;  clearInterval(window.__noGravityInterval);  document.body.style.overflow='';  document.documentElement.style.overflow='';  document.onmousemove=null;  document.onmouseup=null;  document.querySelectorAll('[data-nogravity]').forEach(function(el){    el.style.position=el.dataset.origpos||'';    el.style.left=el.dataset.origleft||'';    el.style.top=el.dataset.origtop||'';    el.style.zIndex=el.dataset.origz||'';    el.style.pointerEvents=el.dataset.origpe||'';    el.style.transition=el.dataset.origtrans||'';    el.style.transformOrigin=el.dataset.origtorigin||'';    el.style.transform=el.dataset.origtransform||'';    el.removeAttribute('data-nogravity');    delete el.dataset.fvx;    delete el.dataset.fvy;    delete el.dataset.dragging;    delete el.dataset.fangle;  });  return;}window.__noGravityActive=1;document.body.style.overflow='hidden';document.documentElement.style.overflow='hidden';var minSpeed=8, friction=0.993;var floatingElems=[].filter.call(document.querySelectorAll('body *'),function(el){  var tag=el.tagName.toLowerCase();  if(tag==='script'||tag==='style'||tag==='link'||tag==='meta')return false;  var rect=el.getBoundingClientRect();  if(rect.width<40||rect.height<40)return false;  var pos=window.getComputedStyle(el).position;  if(pos==='fixed'||pos==='absolute')return false;  return true;});floatingElems.forEach(function(el){  var rect=el.getBoundingClientRect();  el.style.left=rect.left+'px';  el.style.top=rect.top+'px';  el.dataset.nogravity='1';  el.dataset.origpos=el.style.position||'';  el.dataset.origleft=el.style.left||'';  el.dataset.origtop=el.style.top||'';  el.dataset.origz=el.style.zIndex||'';  el.dataset.origpe=el.style.pointerEvents||'';  el.dataset.origtrans=el.style.transition||'';  el.dataset.origtransform=el.style.transform||'';  el.dataset.origtorigin=el.style.transformOrigin||'';  el.style.position='fixed';  el.style.zIndex=9999;  el.style.pointerEvents='auto';  el.style.transition='none';  el.style.transformOrigin='50% 50%';  el.style.transform='';  var angle=Math.random()*2*Math.PI;  el.dataset.fvx=Math.cos(angle)*minSpeed;  el.dataset.fvy=Math.sin(angle)*minSpeed;  el.dataset.fangle=angle;  el.dataset.dragging='0';  el.onmousedown=function(e){    e.preventDefault();    el.dataset.dragging='1';    var startX=e.clientX,startY=e.clientY;    var rect=el.getBoundingClientRect();    var offsetX=startX-rect.left,offsetY=startY-rect.top;    var positions=[];    function move(ev){      el.style.left=(ev.clientX-offsetX)+'px';      el.style.top=(ev.clientY-offsetY)+'px';      positions.push({x:ev.clientX,y:ev.clientY,t:Date.now()});      if(positions.length>5)positions.shift();    }    function up(ev){      el.dataset.dragging='0';      document.removeEventListener('mousemove',move);      document.removeEventListener('mouseup',up);      var vx=0,vy=0;      if(positions.length>=2){        var p1=positions[positions.length-2],p2=positions[positions.length-1];        var dt=(p2.t-p1.t)||1;        vx=(p2.x-p1.x)/dt*16;        vy=(p2.y-p1.y)/dt*16;      }      var v=Math.sqrt(vx*vx+vy*vy);      if(v>0){        el.dataset.fvx=vx;        el.dataset.fvy=vy;        el.dataset.fangle=Math.atan2(vy,vx);      }else{        var angle=parseFloat(el.dataset.fangle)||0;        el.dataset.fvx=Math.cos(angle)*minSpeed;        el.dataset.fvy=Math.sin(angle)*minSpeed;      }      document.removeEventListener('selectstart',blockSel);    }    function blockSel(e){e.preventDefault();}    document.addEventListener('mousemove',move);    document.addEventListener('mouseup',up);    document.addEventListener('selectstart',blockSel);  };});window.__noGravityInterval=setInterval(function(){  floatingElems.forEach(function(el){    if(el.dataset.dragging==='1')return;    var rect=el.getBoundingClientRect(),w=rect.width,h=rect.height;    var left=parseFloat(el.style.left)||0,top=parseFloat(el.style.top)||0;    var cx=left+w/2,cy=top+h/2;    var vx=parseFloat(el.dataset.fvx)||0,vy=parseFloat(el.dataset.fvy)||0;    var angle=Math.atan2(vy,vx);    var v=Math.sqrt(vx*vx+vy*vy);    if(v>minSpeed){      vx*=friction;vy*=friction;      v=Math.sqrt(vx*vx+vy*vy);      if(v<minSpeed){        vx=Math.cos(angle)*minSpeed;        vy=Math.sin(angle)*minSpeed;      }    }else if(v<minSpeed||!isFinite(v)){      vx=Math.cos(angle)*minSpeed;      vy=Math.sin(angle)*minSpeed;    }    cx+=vx;cy+=vy;    if(cx-w/2<0){cx=w/2;vx*=-0.7;}    if(cx+w/2>window.innerWidth){cx=window.innerWidth-w/2;vx*=-0.7;}    if(cy-h/2<0){cy=h/2;vy*=-0.7;}    if(cy+h/2>window.innerHeight){cy=window.innerHeight-h/2;vy*=-0.7;}    el.style.left=(cx-w/2)+'px';    el.style.top=(cy-h/2)+'px';    el.dataset.fvx=vx;    el.dataset.fvy=vy;    el.dataset.fangle=Math.atan2(vy,vx);  });},16);})();
